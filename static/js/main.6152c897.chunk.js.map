{"version":3,"sources":["../external \"Cesium\"","pages/HelloWorld.tsx","index.tsx"],"names":["module","exports","Cesium","position","Cartesian3","fromDegrees","pointGraphics","pixelSize","terrainProvider","createWorldTerrain","HelloWorld","full","point","name","description","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mGAAAA,EAAOC,QAAUC,Q,6HCKXC,EAAWC,aAAWC,aAAa,WAAY,WAAY,KAC3DC,EAAgB,CAAEC,UAAW,IAC7BC,EAAkBC,+BAeTC,EAbI,kBACjB,cAAC,IAAD,CAAQC,MAAI,EAACH,gBAAiBA,EAA9B,SACE,cAAC,IAAD,CACEL,SAAUA,EACVS,MAAON,EACPO,KAAK,QACLC,YAAY,mBCVlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6152c897.chunk.js","sourcesContent":["module.exports = Cesium;","import React from \"react\";\nimport { Viewer, Entity } from \"resium\";\nimport { Cartesian3, createWorldTerrain } from \"cesium\";\n// import worldGeoJson from \"../assets/geojson/countries-medium.geojson\";\n\nconst position = Cartesian3.fromDegrees(-74.0707383, 40.7117244, 100);\nconst pointGraphics = { pixelSize: 10 };\nconst terrainProvider = createWorldTerrain();\n\nconst HelloWorld = () => (\n  <Viewer full terrainProvider={terrainProvider}>\n    <Entity\n      position={position}\n      point={pointGraphics}\n      name=\"Tokyo\"\n      description=\"Hello World\"\n    />\n\n    {/* <GeoJsonDataSource data={worldGeoJson} /> */}\n  </Viewer>\n);\n\nexport default HelloWorld;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport HelloWorld from \"./pages/HelloWorld\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HelloWorld />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}